Set up sample companies based on real data.
- Uber as a CloudFormation template

- Where to incorporate shift left?

CI/CD pipeline as a bunch of local containers.
- Repo?
- Jenkins
- Testing
- DinD
- etc

How to install Audacity inside a container?
Host websites. What's after this? Download the container instead of the website - is this just apps all over again?
Incubation & Startup Advising
- Designing 3d printed products that people can buy.
- Animation (make animation of your process of animating - animated flowchart)
- Solutions Architect 
Overlay rental and house sales price on the same map.


# Combine A and B
- Make 3d comparative levels of architecture solutions - tech level, tech flavor, tech maturity (Gartner bracket) 
- How do game studios go cloud native? Epic?
- Why buy what you can make?
- What makes your proprietary standard more valuable than the industry standard? 

- Getting companies to stop operating like it's 2006 or 2014 and act like it's 2022. (messaging)
- Replacing with SaaS allows coupling costs to usage much more effectively than hiring contractors to mange your IaaS.
- To move from the multi-network hydra of VPC foam:
	1. Main
	2. Audit
	3. Logging
	4. Security Dev
	5. Security Prod
	6. Corp Dev
	7. Corp Test
	8. Corp Prod
	9. AppA Dev
	10. AppA Test 
	11. AppA Stage
	12. AppA QA
	13. AppA Prod
	14. AppB Dev
	15. AppB Test 
	16. AppB Stage
	17. AppB QA
	18. AppB Prod
	19. DevOps Dev
	20. DevOps Test
	21. DevOps Prod

Remodel your workflow of Dev -> (Test -> Stage -> QA ->) Prod (a few stacks are optional in some applications)
to a workflow more like Dev locally -> Commit -> CI/CD pipeline [automated unit Testing -> automated Build -> automated stack Validation -> automated Deploy] -> automated blue/green rebalancing (until only the new version is running).

Which reduces you down to:
	1. Main
	2. Audit
	3. Logging
	4. Security Prod
	5. Security is using entirely SaaS products.
		1. Security Dev - new sandbox accounts as needed
	- Corp is using entirely SaaS products.
		2. Corp Dev 
		3. Corp Test
		4. Corp Prod
	- CI/CD pipeline handles these steps. (i.e. Gitlab)
		5. App Dev - develop locally
		- App Repo - group code storage
		6. App Test - automated testing
		7. App QA - more automated testing
		8. App Stage - repo then blue/green deploy
	6. App Prod
		9. App Dev - as above
		- App Repo - as above
		10. App Test - as above
		11. App Stage - as above
		12. App QA - as above
	7. App Prod
	- CI/CD pipeline is entirely SaaS products.
		13. DevOps Dev
		14. DevOps Test
		15. DevOps Prod

- SaaS cost differential

# Misc 
Code should be as atomic as possible, leading to smaller microservices, leading to smaller clusters, and more flexible compute supply
The short term benefits of doing X exceed the long term support costs.
Maintenance is technical taxes.
Lift and shift on cloud is a technical loan. It gives you more runway but doesn't reduce your technical taxes.
Unscalable, inefficient, or unmaintained is technical debt, and refactoring/rewriting/redesigning is paying off technical debt. 

# Fork your own repo 
cd website
git remote set-url origin https://github.com/Gilgamech/website
git remote add upstream https://github.com/Gilgamech/SiteTemplate

IaaS - lets you host your applications (servers)
PaaS - lets you build your applications (functions)
SaaS - lets you use your applications (cloud hosted)


# Amplify
- Cost: 
- Encryption:
- PaaS
- Use Case: mobile SDKs to connect to AWS infra.

# App Runner
- Cost: 
- Encryption:
- SaaS
- Use Case: Point at container and it handles all the orchestration.

# Block Storage (EBS?)
- Cost: 
- Encryption:
- IaaS
- Use Case: Used for high-data requirements, but needs manual config.

# Bracket - quantum computing
- Cost: 
- Encryption:
- IaaS
- Use Case: 

# CLI
- Cost: Free
- Encryption: SSL
- PaaS
- Use Case: perform various tasks like list buckets, upload data, launch, start, stop, and terminate EC2 instances, update security groups, create subnets, etc.
- Easily switch between accounts with --profile
- Change --output between JSON, Table, and Text.
- Programmatic Access must be setup from IAM
- aws configure command sets up IAM keys, stored plaintext on the filesystem, so use roles instead wherever possible.
- Installed via Python script

# CloudFormation
- Cost: 
- Encryption: are templates encrypted?
- IaaS
- Use Case: automate the provisioning of resources and Infrastructure As Code.
- JSON or YAML
- Errors rollback with message "ROLLBACK_IN_PROGRESS"
## CloudFormation Templates
- Must define at least one resource.
- Larger than 51,200 bytes (0.05 MB) must be imported from S3 bucket
- Can be nested into NestedStacks. 
- Fields:
	- MetaData - extra info
	- Description - of the template
	- Parameters - user inputs
	- Transforms - Macros to modify data.
	- Outputs - Become inputs into other stacks.
	- Mappings - key value lookup table
	- Resources - define what to provision (minimum 1)
	- Conditions - control if resources get created and/or properties assigned.

# CloudFront CDN
- Cost: 
- Encryption: (Are there use cases for non-public CDNs, like large companies? Does Amazon/AWS use CDNs to accelerate internal proprietary content? Are the edge copies encrypted?)
- IaaS
- Use Case: Distributes cached copies to Edge Locations for faster worldwide retrieval. 
- Origin is storage location of data. (S3, Private S3 through Origin Access Identity (OAI), EC2, ELB, R53, etc)
- Distribution defines a collection of Edge Locations and behavior on how it should handle your cached content.
- 2 types: Web (static content) and RTMP (streaming media) 
- Security through Signed URLs or Signed Cookies.
- Write to Edge Locations with verbs like PUT objects. (How does this work and what are the use cases? Invalidate cache for a specific location, or A/B test stuff in a specific region?)
- Lambda@Edge allows passing requests through a Lambda to transform.
- TTL defines cache expiry in seconds.
- Invalidating cache immediately expires the cached items, so they refresh immediately.
- Refreshing a cached item has a bandwidth cost of moving the item from origin to edge.

# CloudTrail
- Cost: 
- Encryption: Are trails encrypted?
- SaaS
- Use Case: Logs calls between AWS services.
- Involves governance, compliance, operational auditing, and risk auditing.
- Can be configured to gather all logs in all regions in all accounts across an AWS Organization. 
- Default is 90 days via Event History, and beyond 90 days requires creating a Trail, which is logged to an S3 bucket, and can be analyzed with Athena.
## CloudTrail Logs
- Log Validation prevents tampering. (How?)
- Encryption: KMS
- Can be streamed to CloudWatch Logs
- 2 event kinds: management (operations like IAM) and data (resources like EC2 or Lambda). Trails don't include data events by default.

# CloudWatch
- Cost: 
- SaaS
- Use Case: Monitoring
- You can track the amount of data written to AWS using Amazon CloudWatch. https://aws.amazon.com/c-tax-faqs/
- Collection of monitoring services: Dashboards, Events, Alarms, Logs, Metrics
- Most services default to 1 minute reporting intervals, with options for 1, 3, and 5. 
- EC2 starts with 5 and calls the 1 min option "detailed monitoring" (does it cost more?) - CloudWatch Agent required.
- Can stream custom logs too.
## CloudWatch Dashboards
- Encryption: Are Dashboards encrypted?
- Visualize metrics
## CloudWatch Events
- Encryption: Are Events encrypted?
- Trigger AWS events based on condition (use case hourly snapshots)
## CloudWatch Alarms
- Encryption: Are Alarms encrypted?
- Notifications based on metrics
## CloudWatch Logs
- Encryption: Are Logs encrypted?
- Data point logging
- Must belong to log group
## CloudWatch Metrics
- Encryption: Are Metrics encrypted?
- Capture one data point across time.
- Custom Metrics allow much higher resolution, down to 1 second.

# Cognito
- Cost: 
- Encryption: Are user pools and identity pools encrypted? Where are they stored?
- PaaS
- Use Case: Decentralized managed auth. 
- User Pools directory allows users to auth using OAuth to IdP (Meta, AZ, Netflix?, Google, AAD, itself, etc) 
	- Uses JWTs to persist auth
- Identity Pools can provide temp AWS creds for service access (S3, DynamoDB, etc)
- Cognito Sync can sync user data and preferences across devices with one line of code (powered by SNS)
- Web Identity Federation exchanges identity and security info between IdP and apps.
- IdP is a trusted login source for other services. 
	- OIDC is an Oauth type of IdP.
	- SAML is an SSO type of IdP.

# Data Exchange
- Cost: 
- Encryption:
- SaaS
- Use Case: Buy someone else's data to process, or use 3rd party data

# Datasync
- Cost: 
- Encryption:
- IaaS
- Use Case: Data transfer agent deployed on a VM in your network, an EC2 Outpost in your network, or on an AWS Snowcone in your network.

# Deep Racer
- Cost: 
- Encryption:
- PaaS
- Use Case: RC car that you can program with ML 

# DNS - Is this just general DNS info that's not directly connected to R53?
- Cost: 
- Encryption: (Is there any non-public info in DNS?)
- IaaS
- Use Case: Domain Name Service converts domain names into IPs and back.
- IPv4 - 32 bit address space (relatively limited)
- IPv6 - 128 bit address space (relatively unlimited)
- TLD i.e. .com
- 2LD i.e. Gilgamech.com
- Domain Registrar is a 3rd party company who sells domains.
- Name Servers are the DNS servers with your domain info.
- Start of Authority (SOA) contains info about the DNS zone and associated records.
- A Record converts directly into an IPv4 address.
- CName Record redirects to another record.
- Time To Live (TTL) is record cache duration. 

# ODS-DocumentDB
- Cost: 
- Encryption:
- PaaS
- Use Case: notMongoDB with 1:1 to be allowed to charge money for open sourced applications.

# ODS-DynamoDB
- Cost: 
- Encryption:
- PaaS
- Use Case: Fully managed NOSQL key/value & document DB.
	- Easy to scale document DB, but no joins and limited queries.
	- Good for applications with large amounts of data and need predictable read & write while scaling. 
- Scales to meet the specified read and write (per second) capacities.
- Data stored as 3 copies on SSDs in 3 regions.
- Two consistency modes: 
	- Eventually (1 sec) Consistent Reads - can return inconsistent immediate reads too.
	- Strongly Consistent Reads - will wait until data is consistent (1 sec) before returning, with higher latencies due to no immediate read option.

# EBS
- Cost: 
- Encryption: KMS?
- IaaS
- Use Case: virtual block-level storage drive that you can attach to a single EC2 instance. 
- Volume dimensions (size, storage type) can be changed at any time.
- Instance Store Volumes are physical storage attached to a host, and cannot be stopped - if the host fails, the data is lost. (What is the use case for these?)
- EBS backed instances can be stopped without data loss.
- Root volumes delete on termination by default.
- Volumes can have termination protection.
## Snapshots
- Snapshots are incremental point-in-time copies, and only changes made since the last snapshot are moved to S3.
- Initial snapshots will take longer than subsequent snapshots.
- EC2 instance should be stopped before snapshotting root volume. But other disks can be taken while the server is running. 
- Restoring a snapshots of an encrypted volume will give you a snapshot that is still encrypted, and you can't share encrypted snapshots.
- Unencrypted snapshots can be shared with other AWS accounts or made public. (Why would you want to make a snapshot public?)
- AMIs can be created from snapshots, or volumes.

# EC2
- Cost: 
- Encryption:
- IaaS
- Use Case: 
## EC2-AMI
## EC2-ASG
## EC2-NAT
## EC2-pricing
## EC2-pricing2

# ODS-ElasiCache
- Cost: 
- Encryption:
- PaaS
- Use Case: Fully managed Redis in-memory database.

# ELB
- Cost: ~$0.55/day or $18/month.
- Encryption: All can hold SSL certs
- IaaS
- Use Case: Split traffic from one destination across numerous servers.
- 3 flavors: Network, Application, Classic
	- Application: 
		- Has Listeners, Rules, and Target Groups
		- For HTTP(S) and is good for web apps.
		- Can attach WAF. (Goes in front?)
		- Advanced routing rules (can route based on subdomain header, path, and other HTTP(S) info.)
		- Can have sticky sessions which are remembered by cookie.
	- Network:
		- Has Listeners and Target Groups but is a lawless place.
		- For TCP/UDP and is good for high throughput i.e. video games.
		- Can't have sticky sessions?
	- Classic:
		- Has Listeners with EC2 instances registered directly.
		- For legacy and is being 
		- Can have sticky sessions which are remembered by cookie.
- Must have at least 2 AZs
- Cannot be cross-region.
- X-Forwarded-For header has source IP.

# ODS-ES (became AmazonSearch?)
- Cost: 
- Encryption:
- PaaS
- Use Case: 

# FSx 
- Cost: 
- Encryption:
- PaaS
- Use Case: 

# Fargate
- Cost: 
- Encryption:
- SaaS
- Use Case: Run containers without worrying about servers.

# Glue
- Cost: 
- Encryption: Serverless ETL that can connect to other data sets, and a no-code studio
- PaaS
- Use Case: 

# Graviton CPUs
- Cost: 
- Encryption:
- IaaS
- Use Case: 

# Ground Station - Satellites
- Cost: 
- Encryption:
- IaaS
- Use Case: 

# Honeycode
- Cost: 
- Encryption:
- PaaS
- Use Case: Write functions without code

# IAM
- Cost: Free
- Encryption: (Are your policies encrypted at rest?)
- PaaS (Foundational)
- Use Case: Used to manage AWS access.
- Universal system, applies to all regions at once. 
- AWS account creation normally starts with root user account setup. 
- Always setup MFA for root accounts.
- New accounts have no permissions until assigned.
- New users get an access key and secret key when created with the programmatic access option set.
- Access keys are only for CLI / SDK access and not for console access.
- Access secret keys are only shown on creation - if lost they must be made again.
- Users must setup MFA for themselves, and this can't be done by an admin. (is this true?)
- IAM allows setting password policies like minimum length or rotation time. 
- IAM identities are users, groups, and roles.
- IAM user accounts allow users to use the AWS Console, or CLI or SDK.
- IAM Groups allow grouping users with the same permissions.
- IAM Roles associate permissions with a resource. 
- IAM Policies are JSON documents listing specific permissions. 
	- Managed Policies are read-only from AWS
	- Customer Policies are ones you make and maintain.
	- Inline Policies are directly attached to a user, group, or resource.
	- List Policies can be listed in the AWS Console and are not directly attached.

# IOT
- Cost: 
- Encryption:
- PaaS?
- Use Case: 
## IOT Core 
	- logging

# Kinesis
- Cost: 
- Encryption:
- PaaS
- Use Case: Captures realtime data stream 

# Lake Formation
- Cost: 
- Encryption:
- PaaS
- Use Case: Create data lakes, or repositories of unstructured data. 

# Lambda
- Cost: Pay per invocation (CPU time and memory size, rounded to nearest 100 ms, and based on requests. First 1M requests are free.) 
- Encryption:
- PaaS
- Use Case: Serverless Functions - upload code and it runs without provisioning servers or architecture.
	- Good fit for short-running tasks where you don't need to customize the OS or environment. 
	- For longer than 15 minutes or a custom OS environment, consider Fargate/ECS
- Supports 7 runtimes:
	- Ruby
	- Python
	- Java
	- NodeJS
	- C#
	- PowerShell
	- Go
- Adjustable duration timeout upto 15 min and memory size up to 3008 MB.
- Can be triggered from SDK or multiple services (S3, API Gateway, DynamoDB, etc)
- Use no VPC by default, but can use a VPC to interact with your other services, like RDS.
- Can scale to 1000 (default) concurrent functions. Can increase this default as an AWS Service Limit increase.
- Cold Starts - if not used recently there will be a startup delay.

# LandingZone
- Cost: 
- Encryption:
- PaaS? (Foundational)
- Use Case: 

# Lex
- Cost: 
- Encryption:
- PaaS
- Use Case: Conversational service with the same tech that operates Amazon Alexa

# Lightsail
- Cost: 
- Encryption:
- SaaS
- Use Case: if you don't care about the infra and just want to deploy a Wordpress site.

# MapReduce
- Cost: 
- Encryption:
- PaaS
- Use Case: Apache Spark, lets you do massive parallel processing on data sets.

# MSK
- Cost: 
- Encryption:
- PaaS
- Use Case: Fully managed Apache Kafka message queue

# ODS-Neptune
- Cost: 
- Encryption:
- PaaS
- Use Case: Graph DB that can get better performance on highly-connected data like a social graph or recommendation engine.

# Organizations
- Cost: 
- Encryption:
- PaaS? (Foundational)
- Use Case: 

# Outposts - Run AWS APIs on your servers
- Cost: 
- Encryption:
- IaaS
- Use Case: 

# ODS-Quantum Ledger
- Cost: 
- Encryption:
- PaaS
- Use Case: QLDB is blockchain-ish

# R53
- Cost: 
- Encryption:
- IaaS
- Use Case: DNS provider, registrar, and domain manager. 
- Traffic Flow: Visual editor for chaining routing policies, has versioning for easy rollback.
- Alias Record - AWS' smart record - it detects changed IP addresses and updates automatically. (How - is it a type of reverse DNS?)
- R53 Resolver: Lets you regionally route DNS queries between your VPCs and your hybrid network.
- Health checks can monitor and automatically reroute between endpoints. And health checks can monitor other health checks.
- Routing types:
	- Simple: Default - multiple addresses result in random endpoint selection.
	- Weighted: Assign percentages to different routes. 
	- Latency-based: Directs traffic based on region to get lowest latency.
	- Failover: Directs traffic to secondary site only if primary site is down.
	- Geolocation: Route based on geographic location.
	- Geo-proximity: Add Bias to Geolocation (requires R53 Traffic Flow)
	- Multi-Value Answer: Return multiple answers (using health checks)

# RDS
- Cost: 
- Encryption: at rest with KMS, in motion with HTTPS.
- PaaS
- Use Case: Relational Database Service
- Instances are managed and cannot be accessed. 
- Automatic Backups:
	- You can set a schedule.
	- No additional cost.
	- Retention window between 1 and 35 days.
- Manual Snapshots: 
	- Can restore database from snapshot.
- 6 database flavors:
	- Aurora
		- Fully-managed PostGres or MySQL with scaling, HA, and fault tolerance.
		- 5x faster than MySQL and 3x faster than PostGres, on same flavor. (How much faster than MySQL is the PostGres one? How do MySQL and PG compare?)
		- Pricing is about 1/10 other flavors.
		- Data stored as 6 copies in 3 regions.
		- Can span regions with Global Database.
		- Aurora Serverless allows starting, stopping, and scaling - for new projects or those with infrequent DB use - to keep costs low.
	- MariaDB
	- MSSQL
	- MySQL
	- Oracle
	- PostGres
- Multi-AZ replicates a standby copy of your DB to another AZ, and keeps it up to date.
- Automatic Failover will automatically promote to master the standby copy if the main DB's AZ goes down.
- Read-Replicas 
	- Allow you to run multiple read-only copies of your DB, to improve performance
	- Uses asynchronous replication. (What's the significance of this?) 
	- Requires automatic backups be setup.
	- Limit of 5, except Aurora can have 15.
	- Can be multi-AZ and use Read-Replicas.
	- Can be in another region (Cross-Region Read-Replicas)
	- Can be promoted to their own database, but this breaks replication.
	- You can have replicas of Read-Replicas. (Can you have Read-Replicas of Read-Replicas?)

# ODS-Redshift
- Cost: Billed per hour for single-nodes and compute nodes.
- Encryption: KMS or CloudHSM
- PaaS
- Use Case: Analytics data store (shift away from Oracle) - dump multiple data sets in one place.  
	- BI Data warehousing - can handle petabytes of data. Data in a warehouse is structured.
- Columnar Store OLAP DB that takes SQL-like queries.
- Can ingest data from S3, EMR, DynamoDB, or multiple sources on remote hosts.
- Limited to single-AZ.
- Single-node or multi-node (clustered).
	- Each node holds 160 GB.
	- Multi-node has a leader node and upto 128 compute nodes. Leader node is free.
- Two node types: Dense Compute and Dense Storage
- Attempts 3 backup copies: Original, Compute, S3. 
- Uses sequential HDD caching.
- Backup retention default is 1 day, can be set up to 35 days.
	- Can asynchronously backup snapshots to another region's S3 bucket.
- Uses massively parallel processing (MPP) to distribute queries and data.
- Uses sample data to create an empty table.

# Registry of Open Data 
- Cost: Free
- Encryption:
- SaaS
- Use Case: Use a public data set, like the Cancer Genome Atlas, USGS LandSat, NOAA GOES, etc.

# Rekognition
- Cost: 
- Encryption:
- PaaS
- Use Case: Image classification API

# Robomaker - robot simulators
- Cost: 
- Encryption:
- PaaS
- Use Case: 

 #S3
- Cost: 
- Encryption:
- SaaS
- Use Case: 
## S3-storageClasses
## S3-transfer

# S3-snowball
- Cost: 
- Encryption:
- SaaS
- Use Case: 

# Sagemaker
- Cost: 
- Encryption:
- PaaS
- Use Case: Use Tensorflow or Pytorch with a managed Jupyter notebook that can connect to a GPU.

# SDK
- Cost: 
- Encryption:
- PaaS
- Use Case: 
- Programmatic Access must be setup from IAM
- Available languages: C++, Go, Java, JS & NodeJS, .NET, PHP, Python, Ruby

# Serverless repos
- Cost: 
- Encryption:
- SaaS
- Use Case: Lambda Marketplace

# SES
- Cost: 
- Encryption:
- SaaS
- Use Case: can send emails

# ODS-SimpleDB
- Cost: 
- Encryption:
- PaaS
- Use Case: Basic NoSQL DB.

# Snow Mobile Core (SnowCone?) provides a suite of services (Systems Manager, Config, CloudWatch, AutoScaling, CloudFormation, CloudTrail, S3, SAS, VPC Management Tools, Provisioning and Subscriber tools, Mobile core control plane through a 5G or 4G connection.)
- Cost: 
- Encryption:
- IaaS
- Use Case: 

# SNS
- Cost: 
- Encryption:
- SaaS
- Use Case: can send push notifications to your app.

# Storage Gateway
- Cost: Services are billed separately below. 
	- The AWS Hardware Appliance is available exclusively through resellers, including CDW.
	- Data Transfer from your gateway appliance to the AWS Storage Gateway service is free.
	- Data Transfer from the AWS Storage Gateway service to your on-premises gateway appliance 
	| TB/Month | per GB | 
	| 9.999 | $0.09 |
	| 40 | $0.085 |
	| 100 | $0.07 |
	| -gt 150 | $0.05 |
	- Data Transfer from the AWS Storage Gateway service to an Amazon EC2-based gateway appliance in the same region is free.
	- Data Transfer from the AWS Storage Gateway service to your gateway appliance in other regions is $0.02 per GB currently.
- Encryption:
- IaaS
- Use Case: Data transfer agent deployed on a VM or hardware device in your network, or as EC2 or VMWare Cloud VM.
## S3 Gateway
- Storage Cost: S3 rate
- Transfer Cost: The first 100 GB into AWS per account is free, then $0.01 per GB up to a maximum of $125.00 per gateway per month. (Billed as Amazon S3 requests.)
## FSx Gateway
- Gateway Cost: $0.69 per Hour
- Storage Cost: FSx for Windows rate
- Transfer Cost: (None listed)
## Tape Gateway
- Gateway Cost: 
- Storage tiers: (per GB-month)
	- Standard: $0.023 
	- Glacier Flexible Retrieval: $0.0036 
	- Glacier Deep Archive: $0.00099
- Transfer Cost: The first 100 GB into AWS per account is free, then $0.01 per GB up to a maximum of $125.00 per gateway per month.
- Retrieval tiers: (per GB)
	- Standard: $0.01 
	- Glacier Flexible Retrieval: $0.02 
	- Glacier Deep Archive: $0.0032
- Early Deletion tiers: (per GB)
	- Standard: None listed
	- Glacier Flexible Retrieval: $0.0108 (Prorated across 90 days.)
	- Glacier Deep Archive: $0.00099 (Prorated across 180 days.)
- Archival: Free (what does this entail?)
## Volume Gateway
- Gateway Cost: 
- Storage Cost: $0.023 per GB-month of data stored
- EBS Snapshot storage - Stored and billed as Amazon EBS snapshots.
- Transfer Cost: The first 100 GB into AWS per account is free, then $0.01 per GB up to a maximum of $125.00 per gateway per month.

# STS
- Cost: 
- Encryption:
- PaaS (Foundational)
- Use Case: 

# Transit Gateway
- Cost: 
- Encryption:
- SaaS
- Use Case: 

# ODS-Timestream
- Cost: 
- Encryption:
- PaaS
- Use Case: Time series database with built-in time-based queries and analytics

# Trainium ML 
- Cost: 
- Encryption:
- PaaS
- Use Case: Machine Learning ASICs can improve training speed while reducing costs.
- Training hardware Trn1

# VMWare Cloud
- Cost: 
- Encryption:
- IaaS
- Use Case: Rehost VMWare workloads in AWS before pursuing a more cloud-native tech strategy.

# VPC
- Cost: 
- Encryption:
- IaaS
- Use Case: 
## VPC-endpoints
## VPC-flowLogs
## VPC-nacls
## VPC-nat
## VPC-securityGroups



#Bibliography:
- FreeCodeCamp.org
	- AWS Certified Solutions Architect - Associate 2020 (PASS THE EXAM!)
	- https://www.youtube.com/watch?v=Ia-UEYYR44s
- Fireship
	- Top 50+ AWS Services Explained in 10 Minutes
	- https://www.youtube.com/watch?v=JIbIYCM48to 

